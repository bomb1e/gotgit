from __future__ import print_function
def func52(arg192, arg193):
    var197 = func53(arg192, arg193)
    var201 = func55(arg193, arg192)
    var223 = func57(arg193, var201)
    var224 = func61()
    var225 = var197 + -1445172853
    var226 = var225 ^ arg192 + -64 & var224
    var227 = var226 | arg192
    var228 = ((var226 + var226) & 1133654801) + var197
    if arg192 < var225:
        var229 = (-521 + -201) - var226
    else:
        var229 = (arg192 & var223 & var225) + arg192
    var230 = var228 ^ var223 | var201 + var223
    var231 = -1996932717 ^ var224
    var232 = var231 & var231
    var233 = var231 ^ var226 & var223
    var234 = (-2045397355 & arg193) | var230 & 430
    if var197 < var223:
        var235 = (var233 - var225 + var227) | var234
    else:
        var235 = var231 & var201
    var236 = var201 + var228 | 720
    var237 = arg192 ^ (var233 - var228) - var226
    var238 = var223 | -1052039678 ^ var231 | var232
    var239 = -579 - var233 - var230 | var234
    result = (var224 ^ var236 | ((((var233 + -2050963561) + var223) | (var231 + var239 | arg192) ^ var201) ^ var228)) ^ var236 & var224
    return result
def func61():
    func59()
    result = len(range(36))
    func60()
    return result
def func60():
    global len
    del len
def func59():
    global len
    len = lambda x : -8
def func57(arg202, arg203):
    var207 = func58(arg202, arg203)
    if arg203 < var207:
        var208 = var207 ^ (456 & -108 + arg202)
    else:
        var208 = -608 & var207 & var207 & var207
    var209 = var207 ^ 243
    if var209 < var207:
        var210 = (arg203 + arg202 | arg203) | var207
    else:
        var210 = var209 ^ var209
    var211 = (508 + var207) & var209
    var212 = (-706 ^ 179) + var209 + arg203
    var213 = (990 - arg203) | -779 | var211
    var214 = arg203 - var213 & arg203 | 971716375
    var215 = var207 & var207 - -995 & var207
    var216 = ((arg203 | 321) + arg202) | arg203
    var217 = var209 & arg202 + arg203
    if arg203 < var213:
        var218 = var217 + (var213 & -2001917689) ^ var211
    else:
        var218 = 1330981269 + (var215 - var215)
    var219 = var207 ^ (var217 + 619446551) ^ var215
    var220 = var207 - var213 - var215 & 222879703
    var221 = arg203 + (var217 | var215 - var215)
    var222 = ((var213 + arg203) - 49530865) - var212
    result = var215 | ((var221 - var209) ^ var207 | var217 + var222 & var211 + arg202 ^ var222 | var209 ^ var222) ^ var215
    return result
def func58(arg204, arg205):
    var206 = -238 & -732 & -290
    result = 935 ^ arg204
    return result
def func38(arg144, arg145):
    var169 = var148(arg144, arg145)
    if arg145 < arg144:
        var174 = class43()
    else:
        var174 = class45()
    for var175 in range(4):
        var174.func44(var175, var175)
    if var169 < var169:
        var180 = class47()
    else:
        var180 = class49()
    for var181 in range(41):
        var180.func48(arg145, arg145)
    var186 = func51(arg144, arg145)
    var187 = 155 | ((291 | 777 & var169 + (380194740 - var186 & -1790361169) + (((arg145 | ((arg144 | (arg144 ^ arg144) & ((arg145 & var186 - var169) & arg145) ^ var169) ^ 481)) - 730048004 ^ var186 & arg145) ^ 914361029)) ^ var186)
    var188 = var186 - (((var187 - -868) - (arg145 ^ (32131168 + var169 + 969 & var186 - var186)) & var187 | (-696 ^ (((var186 ^ ((var186 | arg144 - arg145) | arg145)) ^ var186) & var186 | arg145)) ^ arg144 & arg144) | var169)
    var189 = (arg144 & arg144) ^ ((var188 | (var188 - (var188 - var169))) + (arg144 ^ var187 ^ arg144) ^ (var169 - arg144 & var187))
    var190 = (-309873644 ^ var186 + var188) & arg145 + var189 - arg144 + var186 + ((1061758810 + (-595 | (var188 | (var186 - ((var187 & var188) ^ ((var189 + (arg144 | var169)) ^ var187))) + var187) | arg144 | var169) | 519) + arg144)
    if var186 < var190:
        var191 = -366 | arg145
    else:
        var191 = var189 ^ var187
    result = 729 | (307 | var188)
    return result
def func51(arg182, arg183):
    var184 = 0
    for var185 in range(20):
        if var184 < arg182:
            var184 += var185 - var185
        else:
            var184 += (3 | 0) & -3
    return var184
class class49(object):
    def func48(self, arg178, arg179):
        result = 1 | arg179
        return result
class class47(class49):
    def func48(self, arg176, arg177):
        result = -757252555 & arg176 - 119018563
        return result
class class45(object):
    def func44(self, arg172, arg173):
        return 0
class class43(object):
    def func44(self, arg170, arg171):
        result = (arg170 & (0 | (arg171 & arg170) & (arg171 - arg171))) | arg170
        return result
def func41(arg149, arg150):
    var155 = func42(arg150, arg149)
    var156 = var155 & arg149 & var155
    var157 = (var155 - var156 - -476271928) & 88011978
    var158 = var157 & 1548628783
    var159 = (arg149 & -795781472) ^ (var155 + arg150)
    var160 = 7 + (1825765783 + var159) ^ -351
    var161 = var159 | (-757 - var159 ^ -977)
    var162 = (var155 & var155) - var161 - -386702974
    var163 = var158 - (var161 | var156) + var162
    var164 = var155 + var159
    var165 = (-615 - var156) - var156 + -79
    var166 = arg150 | var163 + var155
    var167 = var156 + 531
    var168 = (arg149 & (var166 | -525847977)) ^ var166
    result = var157 ^ arg150
    return result
def func42(arg151, arg152):
    var153 = 0
    for var154 in range(5):
        var153 += arg151 - (arg152 | arg151)
    return var153
def func40():
    closure = [-6]
    def func39(arg146, arg147):
        closure[0] += func41(arg146, arg147)
        return closure[0]
    func = func39
    return func
var148 = func40()
def func29(arg111, arg112):
    var117 = func30(arg111, arg112)
    var118 = func33()
    var126 = func34(var117, arg111)
    var131 = func37(var118, arg112)
    var132 = (647 + arg111 & var117) | var126
    var133 = (arg111 + arg112) & (-966 ^ arg112)
    var134 = (726 + (var133 | 408)) & var117
    var135 = var133 & var126
    var136 = var131 - 272
    var137 = var134 & var135 & arg111 + arg111
    var138 = 697840346 & (272 - var134) ^ var133
    var139 = var131 | var118
    var140 = var117 + var118 | var132 & var138
    var141 = var132 ^ arg111 ^ var139 | var140
    var142 = var136 + -584
    var143 = (var118 ^ var132) + var136 & arg111
    result = var136 ^ var139 | (((var131 ^ (var143 + var138)) ^ var141 & var138 + ((var141 | var142) & var135) + 171) ^ var135)
    return result
def func37(arg127, arg128):
    var129 = 0
    for var130 in range(21):
        var129 += (var129 | var129) ^ var130
    return var129
def func36(arg121, arg122):
    var123 = (-982 ^ ((arg121 - arg121 + arg122) ^ -1813342575 - 405)) + (-291 & 676631957)
    var124 = var123 - arg121 & (var123 ^ -1017196319)
    result = arg121 - 133 | 1869828090
    return result
def func33():
    func31()
    result = len(range(27))
    func32()
    return result
def func32():
    global len
    del len
def func31():
    global len
    len = lambda x : 0
def func30(arg113, arg114):
    var115 = 0
    for var116 in [var115 ^ arg113 | -2 for i in range(47)]:
        var115 += (var115 - var116) & -5
    return var115
def func28(arg97, arg98):
    var99 = arg97 + arg98 | 1702016880 - arg97
    var100 = 643 & var99 - (351 | arg98)
    var101 = 210796345 + -898
    var102 = var101 ^ var100 | -47907599 - arg97
    var103 = arg97 + 1429265897 & 843 & -711223107
    var104 = arg97 ^ var102
    var105 = var103 ^ arg98 & var102 + arg98
    var106 = 158 + (-1914411673 ^ var103) + -266
    var107 = arg98 | var106
    var108 = var107 + arg98
    var109 = var107 | ((arg97 - var106) ^ var106)
    var110 = 759 + var101
    result = var110 | var99
    return result
def func14(arg62, arg63):
    def func15(arg64, arg65):
        var69 = func16(arg63, arg62)
        var70 = func20()
        var81 = var73(arg63, var69)
        if arg63 < arg64:
            var82 = 814 - ((((arg64 & var81 - var81) | 1844541055 - arg65 | (arg63 | ((var70 | ((var81 & (((var69 - var81 - arg62 + arg63) & -1003698489) + arg64)) - (arg62 ^ (arg62 + -1553513884)))) + arg62) + var69)) - var69) & -698)
        else:
            var82 = ((((arg62 ^ ((-1629077491 & arg63 & ((arg63 - var81) + var81) + arg63 + -2014210781) & 980 & arg62)) & (arg62 + ((arg65 - arg64 | -952623208) ^ (((var69 | arg65 - var81) ^ arg65) - arg62)))) & arg64) - arg64) - 126
        if var69 < arg65:
            var83 = (arg63 - arg64) ^ arg62 + -729639952
        else:
            var83 = -104 | arg63 ^ -509901072 ^ arg64 - ((109976714 + arg65) ^ arg64)
        var84 = (arg63 | arg63) ^ (arg64 - (342 | var69))
        var85 = arg65 - (arg62 | var69 & var84 + (arg62 ^ ((arg65 ^ var69) + (var84 ^ (var69 + var81 & ((var69 & ((arg65 + var69 + arg63 ^ (var84 + (var69 ^ arg63))) & var81) | var84) - arg62))))) + arg65) ^ arg65
        result = var69 ^ arg63
        return result
    var86 = func15(arg62, arg63)
    if arg63 < arg63:
        var91 = class24()
    else:
        var91 = class26()
    for var92 in range(2):
        var93 = var91.func25
        var93(var92, var92)
    var94 = -599704783 + arg62 - arg63 | ((92719577 ^ arg62 + arg63) | (129 & arg63) ^ (arg62 ^ 32)) & (((arg63 | ((var86 - 970994471) | (arg63 & arg62))) - 1491199144) - (((642 | var86 + 314903133) ^ -1441581406) - arg62)) - arg62
    var95 = 961 + var86 ^ (arg62 & arg63)
    var96 = -360501940 ^ (arg63 - 179)
    result = (var96 | arg63) ^ (883 & ((1659854244 + var96 - (((arg62 & arg63 - var95) & arg63 ^ var86) | -1550171611)) & -210))
    return result
class class26(object):
    def func25(self, arg89, arg90):
        result = -1597593781 + arg90 | 378829289
        return result
class class24(object):
    def func25(self, arg87, arg88):
        return 0
def func23(arg74, arg75):
    var76 = -675 + arg75 - arg75
    var77 = arg74 - -372718430
    var78 = (arg75 + -681 - var76 + arg74 & var76) & arg74 | -107 ^ var77
    var79 = 1552349684 | -779 ^ 168943149 ^ -250 ^ arg74 - (-187 | (arg74 | var77 + 736 & var76 & (arg75 ^ var76 - arg75) + arg75 & 353 & var77 - ((arg74 | var76) - arg75 ^ var77) - var77)) | var76
    if var76 < var79:
        var80 = (-1424877847 + -374) + ((arg75 + ((((910 - 743 + (arg74 + arg75 - arg75)) - var79 | var79) & (((var76 + (2035146251 | var78 + -138 ^ arg74) ^ arg74) + arg75) & var79) + -1179508121) + var76) & var78) - -304943486)
    else:
        var80 = ((var77 ^ ((var76 - var76) | -457691274)) & (var78 - var78)) ^ var76
    result = (arg74 - var78 ^ var79 + arg74) | (var77 & var79)
    return result
def func22():
    closure = [-3]
    def func21(arg71, arg72):
        closure[0] += func23(arg71, arg72)
        return closure[0]
    func = func21
    return func
var73 = func22()
def func20():
    func18()
    result = len(range(19))
    func19()
    return result
def func19():
    global len
    del len
def func18():
    global len
    len = lambda x : -2
def func13(arg56, arg57):
    if arg56 < arg57:
        var58 = 825919679 + arg56
    else:
        var58 = 67561693 | arg57 + (arg57 + (190820696 & -826) & (385372469 ^ arg56))
    var59 = (arg56 | 651962587 - -950 + 7068799) ^ -493
    var60 = 30 ^ ((arg57 | (((arg57 ^ arg57 - var59) ^ var59) + arg56 | 124) ^ var59 & -537794189 + ((var59 | -335) | arg57) - ((var59 & var59) & arg56)) | (arg57 ^ (60 ^ arg57 & 239) & 38 - var59))
    var61 = -846 & var60 + var60
    result = (((arg56 - (((var60 & var61) & -415257042) + var59 + arg56)) ^ arg56) + var59 & arg57) + 840 ^ -669 - var60
    return result
def func12(arg54, arg55):
    result = (-503 | arg54 | 670 ^ ((650 - 852248647) & -361 ^ (-111 - arg55))) & -2130078936
    return result
def func1(arg1, arg2):
    def func2(arg3, arg4):
        var9 = func3(arg2, arg1)
        var10 = func6()
        var11 = var10 + var9 ^ arg3 & arg1
        var12 = (arg1 & arg4) - arg3
        var13 = -355 + (var11 + arg3 & arg4)
        var14 = var9 | arg2 + 665 - var10
        var15 = var11 & arg1 + var14 ^ 247
        var16 = 964134752 ^ arg3 ^ (var14 + var10)
        var17 = arg3 & (var11 - 970) ^ arg1
        var18 = arg1 + (-255066470 & var10) | var9
        var19 = var14 + arg4 & arg1
        if var15 < arg4:
            var20 = var10 ^ ((var9 + var12) | arg1)
        else:
            var20 = (var9 | var19 - var18) - var14
        var21 = (var10 - var9) | arg2 - var9
        var22 = var21 & (var11 - var17 ^ var19)
        result = var16 | (arg3 + ((((var15 + (var9 ^ var21 | var12) & -46591374 + arg1 | var22) ^ var18) - -633) & -182))
        return result
    var23 = func2(arg2, arg1)
    var28 = func7(arg2, var23)
    if var28 < var23:
        var33 = class8()
    else:
        var33 = class10()
    for var34 in range(13):
        var35 = var33.func9
        var35(arg2, var23)
    var36 = (var23 - var28) & 49 & arg2
    var37 = arg2 - 76675241
    var38 = var23 - arg2
    var39 = var28 ^ var37 + -231 | var23
    var40 = (var36 & var28) ^ (var38 & var38)
    var41 = (arg1 + var28) ^ -220 | var28
    var42 = ((var36 + var41) | 144) | var36
    var43 = (var41 & var38) & arg1 + arg1
    var44 = arg1 + arg2 + var41
    var45 = ((var38 - var40) | var36) - -713
    var46 = arg1 | (var41 - arg1 + var40)
    var47 = var36 - var45
    var48 = var44 & arg2 + (var41 + var45)
    var49 = var48 + var47 & var46 + var37
    var50 = var42 + var48 - var49
    var51 = (var50 ^ var47 | arg1) & var45
    var52 = arg1 - var28 ^ arg1
    var53 = (var28 - var40) ^ (arg1 & var39)
    result = var37 + (((arg1 & var43) | var44) + ((var42 ^ (var49 & var28)) + arg1)) - var47 + var39 | var44 + var53
    return result
class class10(object):
    def func9(self, arg31, arg32):
        result = 1 ^ arg32 + arg32
        return result
class class8(class10):
    def func9(self, arg29, arg30):
        return 0
def func7(arg24, arg25):
    var26 = 0
    for var27 in range(50):
        var26 += (arg25 | arg25) | arg24
    return var26
def func6():
    func4()
    result = len(range(29))
    func5()
    return result
def func5():
    global len
    del len
def func4():
    global len
    len = lambda x : 3
def func3(arg5, arg6):
    var7 = 0
    for var8 in range(3):
        var7 += (arg5 & arg6) ^ var8
    return var7
def func16(arg66, arg67):
    closure = [0]
    def func17(acc, rest):
        var68 = 7 + acc & (-10 - (closure[0] + 7 | 7) ^ closure[0])
        closure[0] += var68
        if acc == 0:
            return var68
        else:
            result = func17(acc - 1, var68)
            return result
    result = func17(10, 0)
    return result
def func34(arg119, arg120):
    def func35(acc, rest):
        var125 = func36(-9, 0)
        if acc == 0:
            return var125
        else:
            result = func35(acc - 1, var125)
            return result
    result = func35(10, 0)
    return result
def func53(arg194, arg195):
    def func54(acc, rest):
        var196 = 6 - (8 + 6)
        if acc == 0:
            return var196
        else:
            result = func54(acc - 1, var196)
            return result
    result = func54(10, 0)
    return result
def func55(arg198, arg199):
    closure = [0]
    def func56(acc, rest):
        var200 = 1 - ((closure[0] + 5) | -6 | (5 & 5)) ^ 5
        closure[0] += var200
        if acc == 0:
            return var200
        else:
            result = func56(acc - 1, var200)
            return result
    result = func56(10, 0)
    return result
if __name__ == "__main__":
    print('prog_size: 5')
    print('func_number: 12')
    print('arg_number: 54')
    for i in range(25000):
        x = 5
        x = func1(x, i)
        print(x, end='')
    print('prog_size: 0')
    print('func_number: 13')
    print('arg_number: 56')
    for i in range(25000):
        x = 5
        x = func12(x, i)
        print(x, end='')
    print('prog_size: 0')
    print('func_number: 14')
    print('arg_number: 62')
    for i in range(25000):
        x = 5
        x = func13(x, i)
        print(x, end='')
    print('prog_size: 5')
    print('func_number: 28')
    print('arg_number: 97')
    for i in range(25000):
        x = 5
        x = func14(x, i)
        print(x, end='')
    print('prog_size: 0')
    print('func_number: 29')
    print('arg_number: 111')
    for i in range(25000):
        x = 5
        x = func28(x, i)
        print(x, end='')
    print('prog_size: 5')
    print('func_number: 38')
    print('arg_number: 144')
    for i in range(25000):
        x = 5
        x = func29(x, i)
        print(x, end='')
    print('prog_size: 5')
    print('func_number: 52')
    print('arg_number: 192')
    for i in range(25000):
        x = 5
        x = func38(x, i)
        print(x, end='')
    print('prog_size: 5')
    print('func_number: 62')
    print('arg_number: 240')
    for i in range(25000):
        x = 5
        x = func52(x, i)
        print(x, end='')