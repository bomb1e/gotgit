from __future__ import print_function
def func38(arg238, arg239):
    var240 = func41()
    var245 = func42(var240, arg239)
    var246 = func45()
    var251 = func46(var240, arg238)
    var256 = func47(arg239, var245)
    var257 = 220 | var251 ^ 221 | 258
    var258 = (var251 - var245) + var256 | var240
    var259 = var245 - (arg239 & var251) + var256
    var260 = (arg238 ^ var251) | var259 | var245
    if var258 < var251:
        var261 = var246 | arg238
    else:
        var261 = var259 - var240
    var262 = var251 ^ var259
    var263 = (var260 - var258 - arg239) ^ var259
    var264 = -671 + var245 + arg238
    var265 = arg238 + var256 | var257 + arg239
    if var251 < var240:
        var266 = (var256 - var240 | var259) + var265
    else:
        var266 = var257 ^ ((var264 | arg239) - var256)
    var267 = (var245 | var262 - var262) & var265
    var268 = (var258 | var264) & (var264 | var258)
    var269 = (var251 + arg239) & var264
    if var256 < var269:
        var270 = var265 & (arg239 ^ arg239 & arg239)
    else:
        var270 = (var264 + var258 - var264) ^ var245
    var271 = var246 + var259
    var272 = var264 - var246
    if var271 < var240:
        var273 = var259 | var264 - -806937254 & arg238
    else:
        var273 = var271 & var256
    var274 = var265 & var263 + var271 | arg239
    var275 = var259 + var272
    var276 = var271 | var240
    result = ((var264 | arg238 | var276 & var260 + arg238) + var267 - var272 | var246) | var245 & var264 - var264 + var260
    return result
def func47(arg252, arg253):
    var254 = 0
    for var255 in range(35):
        var254 += var255 - var255
    return var254
def func46(arg247, arg248):
    var249 = 0
    for var250 in range(14):
        var249 += var250 ^ var250 & 9
    return var249
def func45():
    func43()
    result = len(range(46))
    func44()
    return result
def func44():
    global len
    del len
def func43():
    global len
    len = lambda x : -3
def func42(arg241, arg242):
    var243 = 0
    for var244 in range(3):
        var243 += (arg242 + arg241) & var243
    return var243
def func41():
    func39()
    result = len(range(6))
    func40()
    return result
def func40():
    global len
    del len
def func39():
    global len
    len = lambda x : 3
def func28(arg202, arg203):
    var208 = func29(arg202, arg203)
    var212 = func30(arg203, var208)
    var223 = var215(arg202, arg203)
    var226 = class35()
    for var227 in range(41):
        var226.func36(var223, arg203)
    var232 = func37(var208, var212)
    var233 = (var208 & var223) ^ ((var212 & var223) & var208)
    var234 = var223 | (1695152393 ^ var208) ^ var212 | arg203 | arg202 ^ (var212 + var208)
    var235 = arg203 + arg203
    var236 = (((var232 - arg202 + (var212 - (var234 + (arg202 | (var232 & var232 & var208 - ((var234 | var232) + (var223 | var233) ^ var233 & -963 | var223) ^ arg202) - arg203)))) ^ var223 - 1634672298) ^ arg202) | -651670471 ^ -144
    var237 = (((124358379 ^ (var212 | var235 & (var236 ^ var236 ^ (707 | arg203)) ^ var208) - (-2085597243 ^ (((var232 | var208 & var235) | arg203 - arg203) + arg203 - var235))) & -254 | arg202 + var232 ^ var236) | var236) + var236
    result = var236 - 598071522 - var208 | arg202 & var232 + -1449546971 ^ var237 | 1606562053
    return result
def func37(arg228, arg229):
    var230 = arg229 + arg229
    var231 = arg228 & ((arg229 | (-1248482750 ^ (var230 & var230) + ((arg228 ^ var230 - arg229 + (710213773 - 632 ^ (arg229 + var230) ^ arg228 - arg229) ^ (var230 - 809) + -906867902) - 390 ^ arg229))) + arg228) & var230 - arg229
    result = arg228 & var231
    return result
class class35(object):
    def func36(self, arg224, arg225):
        result = arg224 ^ arg224
        return result
def func34(arg216, arg217):
    var218 = (737 - 895763707) & arg216
    var219 = (arg216 - -300) ^ (212 & (2140928900 + 803653521 | var218) ^ arg216)
    var220 = (460 | arg216 & var219) - ((var218 | -362) - arg216 & 489 + arg217) | 1831562027
    var221 = (var218 ^ var220 ^ arg216) & (-1963524747 - arg216)
    var222 = arg216 - var218 | (var219 | (var218 & (var218 | var221)))
    result = -296748306 ^ var222
    return result
def func33():
    closure = [8]
    def func32(arg213, arg214):
        closure[0] += func34(arg213, arg214)
        return closure[0]
    func = func32
    return func
var215 = func33()
def func29(arg204, arg205):
    var206 = 0
    for var207 in range(31):
        var206 += var206 | var207 - arg204
    return var206
def func19(arg151, arg152):
    var157 = func20(arg152, arg151)
    var166 = var160(arg152, var157)
    var174 = var169(var157, arg152)
    var179 = func27(arg152, var157)
    var180 = (var157 & arg151 | 793389936) ^ var179
    var181 = var157 | (var157 + 531) - var180
    var182 = (var179 | arg151 | var174) + arg151
    var183 = var166 - (var182 + var166)
    var184 = var182 | var157 | -246973744 + var180
    var185 = var157 - (arg151 | var181 & var180)
    var186 = var182 + arg151
    var187 = (var174 + var186 + var182) ^ var185
    var188 = (var157 - (var182 | arg151)) + var157
    var189 = arg151 + var174 - (var187 - var183)
    var190 = ((var179 ^ var166) ^ var157) | var188
    var191 = var187 | ((-561 ^ var190) & arg151)
    var192 = var186 | var190
    var193 = arg151 & (1307967586 & -13871277) - var166
    var194 = (var157 | var183) - var179
    var195 = var189 & var179
    var196 = var166 | var174 + var174 ^ var174
    var197 = var190 ^ (var181 + var174)
    var198 = var193 | 1985187238
    var199 = var198 + arg152 & 1938917412 - var183
    var200 = var199 + var198
    var201 = var196 ^ var166
    result = ((-302 + var190 ^ arg151 + var187) & (var197 - var183)) ^ var157 - var186 & arg151
    return result
def func27(arg175, arg176):
    var177 = 0
    for var178 in range(15):
        var177 += arg175 ^ (arg175 - arg175)
    return var177
def func26(arg170, arg171):
    var172 = arg170 ^ -416
    var173 = arg171 | arg171
    result = (arg170 + 2076639541) + arg170
    return result
def func25():
    closure = [9]
    def func24(arg167, arg168):
        closure[0] += func26(arg167, arg168)
        return closure[0]
    func = func24
    return func
var169 = func25()
def func23(arg161, arg162):
    var163 = -123 + arg162 & (870 ^ -819) & arg162 | 297
    if arg162 < var163:
        var164 = ((arg161 - arg161) | (arg161 | arg161) & var163 ^ var163) | 538
    else:
        var164 = arg162 + var163 ^ 879 - 693
    var165 = arg161 | 689
    result = arg161 | 732
    return result
def func22():
    closure = [8]
    def func21(arg158, arg159):
        closure[0] += func23(arg158, arg159)
        return closure[0]
    func = func21
    return func
var160 = func22()
def func20(arg153, arg154):
    var155 = 0
    for var156 in (var155 & (i + i) for i in range(24)):
        var155 += (5 - arg153) - arg153
    return var155
def func12(arg102, arg103):
    var107 = func13(arg103, arg102)
    var112 = func15(arg102, var107)
    def func16(arg113, arg114):
        def func17(arg115, arg116):
            var117 = (-406 | var112) + arg113 | arg102
            var118 = (1322534956 + var117 | arg113) & arg114
            var119 = ((arg114 - 156455797) & arg102) - arg116
            if var107 < arg102:
                var120 = (var112 ^ arg103 ^ var107) ^ arg116
            else:
                var120 = var107 & -538537178 + 882
            var121 = var112 - arg115
            var122 = arg114 + arg102
            var123 = (arg114 | (arg116 & var112)) | arg103
            var124 = var122 ^ arg114
            if arg116 < var123:
                var125 = (883 ^ var112) + var112 ^ arg102
            else:
                var125 = var117 | var112 | 501887212
            var126 = (var118 + var107) + arg113 ^ arg116
            var127 = (arg115 & var121) | var119 + arg103
            result = ((arg103 + (var123 - ((arg116 ^ var112 & 210) + arg103 | var118)) | var121 | var122 - var127) | -874) & arg103
            return result
        var128 = func17(var107, arg113)
        var129 = arg113 + -1062801884
        var130 = (arg113 - var128 & arg113 & var112) ^ arg114 ^ (arg113 + var128 ^ var128 | var129) ^ (-1395611101 | arg113) ^ var129 - var107 | var128
        result = ((arg103 - arg103) - arg102) & ((var129 & ((var128 | arg113) | ((-537 - var129) + arg114))) & var129 & var112) & var112
        return result
    var131 = func16(var112, arg103)
    var150 = func18(var107, arg102)
    result = var112 ^ (((((((var107 ^ arg102) | arg103) - var150) ^ var112 + var107 - arg103) ^ var107) & var150 | 929333954) & var112)
    return result
def func18(arg132, arg133):
    var134 = 1299105965 | arg133
    var135 = arg133 & var134 & var134
    var136 = ((-288 | arg133) ^ arg132) ^ arg132
    var137 = arg132 | ((var135 ^ var135) | 163618558)
    if arg133 < arg133:
        var138 = (arg132 ^ 1946535622 | var135) | var135
    else:
        var138 = ((arg133 + var137) & arg132) & arg132
    var139 = var136 & (var136 - var137)
    var140 = var139 + var134
    var141 = -1165361643 - var137 ^ var139
    var142 = (var135 ^ (var141 | var136)) & var139
    var143 = var135 ^ (var142 ^ var140)
    var144 = var137 + var137
    if var137 < var144:
        var145 = var142 + -1865261744
    else:
        var145 = arg133 + var139
    var146 = var142 & var144 ^ var140 - var137
    var147 = var136 | var135 & arg133 | arg133
    var148 = ((713 & var139) | var147) + var135
    var149 = var136 - var146
    result = ((var136 - var146) | var147 + var142) ^ var140
    return result
def func15(arg108, arg109):
    var110 = 0
    for var111 in range(26):
        var110 += arg109 + (arg109 & arg108)
    return var110
def func1(arg1, arg2):
    var50 = var5(arg1, arg2)
    var51 = func8()
    var72 = func9(arg1, arg2)
    var75 = class10()
    for var76 in range(45):
        var75.func11(var76, arg1)
    var77 = var72 & arg1
    var78 = (var51 + var72) - var50 & var50
    var79 = var78 | ((var51 | var78) ^ var72)
    var80 = var78 + arg2
    if var77 < arg1:
        var81 = var51 | ((arg2 ^ var78) | var80)
    else:
        var81 = (var50 & var77) + (var72 - var78)
    var82 = (var72 ^ 196 ^ var77) - arg1
    if var78 < var77:
        var83 = (var78 ^ -1559353356) & (arg1 + var51)
    else:
        var83 = arg2 & var78
    var84 = var80 + (var79 & 410 ^ var78)
    if var84 < var78:
        var85 = var78 & var51
    else:
        var85 = var78 & var77 - var50 | arg2
    var86 = (461301875 - arg1) + var79 + arg1
    var87 = (var72 | arg2 - var82) - var86
    var88 = (var86 - var50) + var84 | var51
    var89 = var78 | (var50 + (var88 ^ var82))
    var90 = var82 | var79
    var91 = var77 - var50
    var92 = var90 - 864
    var93 = var79 - var78 ^ var91 & 504523888
    var94 = var82 + 1989354368
    var95 = var51 | 108 + var51 & -145
    var96 = (var88 | var94 ^ 480) | -1873584473
    var97 = var82 + var92 ^ (var92 + var82)
    var98 = var96 ^ var78
    if var97 < var82:
        var99 = (var72 ^ var91 & var51) + var97
    else:
        var99 = (var90 + var97 - var97) + var78
    var100 = var94 - var91 | var77
    var101 = var90 | var80 + var98 - var97
    result = (arg1 ^ ((var101 - var79 - 1262871528 - var94 ^ var80) & (var50 & var88))) | var86
    return result
class class10(object):
    def func11(self, arg73, arg74):
        result = arg74 + ((arg74 ^ arg73) & (-188150578 & 2053118350) - arg74) & arg74
        return result
def func9(arg52, arg53):
    if arg53 < arg52:
        var54 = ((arg52 - arg52) & arg53) ^ arg53
    else:
        var54 = arg52 | (arg52 | arg52) - arg52
    var55 = (-871380646 | 628103511) & 706758206 + -518
    if var55 < var55:
        var56 = 486 + 1678744045
    else:
        var56 = 652 | arg53 - -260
    if arg53 < arg53:
        var57 = 606 - -1947252185 | 327348342 + 2105862274
    else:
        var57 = -584 & arg52
    var58 = (var55 & arg53) & -170713196 & arg52
    var59 = -510 ^ arg53
    var60 = (1433911358 + var58) ^ var58 | var55
    var61 = var60 ^ (arg53 - var60) + var60
    var62 = var59 | -835 - arg52 + var55
    var63 = -2126571143 ^ var58
    if arg53 < var61:
        var64 = (-34 - var63) & 795558919 + -777979482
    else:
        var64 = var55 | (var61 ^ var59) | var58
    var65 = var62 + var61
    var66 = var63 - (var62 | var60)
    var67 = var58 + var65
    var68 = (arg53 ^ var59) | var65 & 1504040145
    var69 = 1987626948 & -523 + (1292145540 & var62)
    var70 = var66 ^ var59 + var66 - var69
    if var68 < var68:
        var71 = (var58 | var70) | var70
    else:
        var71 = var70 & var63
    result = var69 + var60
    return result
def func8():
    func6()
    result = len(range(12))
    func7()
    return result
def func7():
    global len
    del len
def func6():
    global len
    len = lambda x : 3
def func4(arg6, arg7):
    var27 = func5(arg7, arg6)
    if arg7 < arg6:
        var28 = arg7 - arg7
    else:
        var28 = arg7 ^ 226
    var29 = -858512864 | (arg6 + arg6) ^ arg6
    var30 = var29 - ((arg6 - var27) - var27)
    var31 = var30 ^ ((-170 - arg7) ^ var30)
    var32 = arg7 | var27 + var27 - -807
    var33 = arg6 ^ -127724784
    var34 = var29 - -238
    var35 = 711 & -1715479615
    var36 = var32 & var35
    var37 = (var32 | (var27 - var27)) - var35
    var38 = (var37 ^ var27 - var33) ^ var31
    var39 = (arg6 - -1785631536) | -1939107892
    var40 = var34 + var39 - var29 - var38
    var41 = (var30 - var34) - var39
    var42 = var29 & var41 ^ var39 | 494
    var43 = var27 ^ (var40 ^ var33 + var37)
    var44 = var40 - var42
    var45 = var43 - (var33 & var27) + var40
    var46 = arg6 ^ var42
    var47 = var27 + (var32 | var43) & var46
    var48 = var34 ^ var32
    var49 = -35 & var40
    result = var31 ^ (var46 ^ ((arg7 - arg7) + var38)) ^ -1934188802 ^ var43
    return result
def func5(arg8, arg9):
    var10 = arg8 ^ (-581 | -528 ^ 25)
    var11 = var10 | (arg8 & arg9)
    if var10 < var10:
        var12 = (1620657791 - var10) - arg9
    else:
        var12 = var10 + -1682490623
    var13 = var10 & 1050917545 - 1404005063 & -1201289220
    var14 = (var10 & (1816846201 | arg9)) + -917
    var15 = (var11 ^ arg8 - arg8) | arg9
    var16 = var15 & ((var14 & var10) - -105391939)
    var17 = 469 & (var14 + var11)
    var18 = var15 ^ (var15 - var15 | -960)
    var19 = (var11 - (var16 - var11)) + arg9
    var20 = (var16 ^ var10) + var11 - -1796239650
    var21 = var20 + 489
    var22 = var17 + arg9
    var23 = -513189596 | var21
    var24 = var23 | var19 | var13 - arg9
    var25 = var21 & var10
    var26 = var20 & var16
    result = var25 + var23 - var16
    return result
def func3():
    closure = [1]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
def func13(arg104, arg105):
    closure = [0]
    def func14(acc, rest):
        var106 = 7 & 1
        closure[0] += var106
        if acc == 0:
            return var106
        else:
            result = func14(acc - 1, var106)
            return result
    result = func14(10, 0)
    return result
def func30(arg209, arg210):
    closure = [0]
    def func31(acc, rest):
        var211 = -4 + 5 ^ rest
        closure[0] += var211
        if acc == 0:
            return var211
        else:
            result = func31(acc - 1, var211)
            return result
    result = func31(10, 0)
    return result
if __name__ == "__main__":
    print('prog_size: 5')
    print('func_number: 12')
    print('arg_number: 102')
    for i in range(25000):
        x = 5
        x = func1(x, i)
        print(x, end='')
    print('prog_size: 5')
    print('func_number: 19')
    print('arg_number: 151')
    for i in range(25000):
        x = 5
        x = func12(x, i)
        print(x, end='')
    print('prog_size: 5')
    print('func_number: 28')
    print('arg_number: 202')
    for i in range(25000):
        x = 5
        x = func19(x, i)
        print(x, end='')
    print('prog_size: 5')
    print('func_number: 38')
    print('arg_number: 238')
    for i in range(25000):
        x = 5
        x = func28(x, i)
        print(x, end='')
    print('prog_size: 5')
    print('func_number: 48')
    print('arg_number: 277')
    for i in range(25000):
        x = 5
        x = func38(x, i)
        print(x, end='')