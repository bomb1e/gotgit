from __future__ import print_function
def func50(arg279, arg280):
    var285 = func51(arg279, arg280)
    var299 = func52(arg279, arg280)
    var300 = (arg280 | (var285 - arg280)) - arg279
    if arg280 < arg280:
        var301 = (arg280 ^ var285 & var300) & var299
    else:
        var301 = var285 ^ var300 + arg279 - arg279
    var302 = var299 + (arg279 ^ -936 ^ -1139759741)
    var303 = var285 - var299 & var300 | var302
    var304 = var300 - arg280
    var305 = var303 ^ var285
    var306 = var299 | arg280 + (var299 ^ var302)
    if var300 < var306:
        var307 = var304 & 344
    else:
        var307 = (var303 ^ arg280) - arg280 & arg280
    var308 = (var302 + var306 ^ var300) - var305
    var309 = var306 & var306
    var310 = var306 ^ arg280
    var311 = ((var303 + -1569555436) ^ var300) & arg280
    result = (var285 & (var306 - var304 | var311 + arg280)) ^ var304 + (var304 ^ var300) ^ 213
    return result
def func52(arg286, arg287):
    var288 = arg287 + (arg286 & (arg287 + -560))
    var289 = -11 | (175985696 | 1414147254 & 749)
    var290 = (-990 | arg286 ^ 680180586) - arg286
    var291 = (arg286 | arg286 - arg287) ^ -969938780
    var292 = (var290 & 1532928293 | arg287) & var289
    var293 = arg287 | (var292 ^ 1894147333 & -933090234)
    if arg286 < var291:
        var294 = (var292 + arg286 & var293) ^ var289
    else:
        var294 = ((-844 & var293) ^ var290) - arg286
    var295 = var289 - arg287
    var296 = var292 ^ var290
    var297 = var292 - var291
    if arg287 < var292:
        var298 = var296 | var292 - var288
    else:
        var298 = var296 | -1075741577 - var290
    result = -97477549 + var292
    return result
def func51(arg281, arg282):
    var283 = 0
    for var284 in range(5):
        var283 += arg282 ^ arg281
    return var283
def func42(arg231, arg232):
    if arg232 < arg232:
        var237 = class43()
    else:
        var237 = class45()
    for var238 in [i & i & i for i in (1 & (arg231 ^ arg232) for i in func47(arg231, -1))]:
        var278 = var237.func44
        var278(arg232, var238)
    result = arg232 - ((arg231 & arg231 - 203 ^ ((arg231 - -2042083838 | 330 ^ arg231 & arg232) - 1690432017) + 252) | -197)
    return result
def func48(arg241, arg242):
    var245 = func49(arg241, arg242)
    if var245 < var245:
        var246 = 731 - -443
    else:
        var246 = (926 + 197) | arg241 & arg242
    var247 = 709069263 - -722
    var248 = -2135932720 | -920 ^ arg241 ^ -1359807822
    var249 = 749642260 + var245
    if var249 < arg242:
        var250 = -574 ^ -2096434234
    else:
        var250 = arg242 | var249 + arg241 + var248
    var251 = ((var248 - arg241) ^ var247) | 918507150
    var252 = var249 & arg241
    var253 = ((667 & var251) + arg242) - arg241
    var254 = (var252 & var251) | (-192 & arg242)
    var255 = -913134302 - arg242 | arg242
    if var252 < var247:
        var256 = 75830502 ^ var245
    else:
        var256 = ((var255 | 707862930) | var254) ^ var245
    var257 = 663562515 - (var255 ^ -87 & var254)
    var258 = var255 | (var252 | var247) | arg242
    var259 = 1226241027 - (var248 - arg241)
    var260 = (var248 + var245) | var249
    var261 = (var249 | var260 & var248) & var251
    if arg241 < var255:
        var262 = -840 ^ var247
    else:
        var262 = var261 & (var253 + -563) | 243275239
    var263 = var248 + var245
    var264 = var258 + -866
    var265 = var257 & var247 | var249 - var260
    var266 = arg242 | var264
    result = ((arg241 & var258) - var258 + var257 + ((var265 & arg242) & var249 | var260)) & var249
    return result
def func49(arg243, arg244):
    result = (arg244 ^ (arg244 & -1748227913 & 473852810 | arg243 ^ -1518083987 + arg244 ^ 305)) + 1651548658
    return result
def func47(arg239, arg240):
    var267 = func48(arg240, 983723627)
    yield var267
    var268 = ((1032089497 | arg239) + arg239) | 301756071
    yield var268
    var269 = arg239 - (-982 - 403294105) | -1390288130
    yield var269
    var270 = -462 + arg240 - var268 & var268
    yield var270
    var271 = 349763752 ^ arg240
    yield var271
    var272 = 280692206 | -425
    yield var272
    var273 = arg240 & -642 + arg239 + arg240
    yield var273
    var274 = var268 | (var271 - arg240)
    yield var274
    var275 = 900 & (var269 | arg239) - -263487012
    yield var275
    var276 = (520 + -388 - var270) & var272
    yield var276
    var277 = (var271 - var271) & 72
    yield var277
class class45(object):
    def func44(self, arg235, arg236):
        return 0
class class43(class45):
    def func44(self, arg233, arg234):
        result = arg234 - (((arg233 & arg233) | arg233 | arg234 | 0) + 1993679634)
        return result
def func34(arg183, arg184):
    var185 = func37()
    var186 = func40()
    var214 = func41(var185, var186)
    var215 = (arg183 + var214) | var185 | var185
    var216 = (arg183 + var215 + arg183) & arg184
    var217 = (var216 + arg184) | var216
    var218 = arg183 - (-615 + var214)
    var219 = var214 & var214 - var215 ^ var218
    var220 = (956756582 - var214 ^ var215) ^ var214
    var221 = arg183 + var220 + var218 - var219
    if var186 < var185:
        var222 = var217 ^ var216 & var185
    else:
        var222 = -1083647773 | var215
    var223 = var185 ^ var220 ^ var216
    var224 = var221 - var216
    var225 = arg184 ^ (var214 | (240352950 & var216))
    var226 = var216 ^ var220 + var225
    var227 = 1584718471 | var223 ^ var216 & 750058801
    var228 = -399 + var224 | var217
    var229 = var223 & var228
    var230 = var214 - (var221 + var216) + arg183
    result = var226 & var230 ^ ((((var214 ^ var215 & var185 ^ (var229 ^ var221)) + var228 ^ 9) | var223) ^ var219 - -490)
    return result
def func41(arg187, arg188):
    var189 = (arg188 + 107224759 & arg187) - -950
    var190 = (81 - -234) ^ arg188 + 531
    var191 = arg188 | var190
    var192 = (arg188 + arg187) + (var191 | -14)
    if var191 < var191:
        var193 = var189 - var190 & var191 & var190
    else:
        var193 = -109 | ((arg187 | -636) | var191)
    var194 = arg188 - var189 ^ -672160892 ^ var189
    if arg188 < arg188:
        var195 = var194 ^ 756
    else:
        var195 = (-295 & arg188) + var189 - var194
    var196 = arg188 + var190 & var194
    var197 = arg188 & -1313215483
    var198 = arg187 - var197 + var197 - var190
    var199 = arg188 & var189 - var194 ^ var192
    var200 = var192 + var196 | var190 & var190
    var201 = var190 + 705
    var202 = var198 ^ var200 & var196 & var191
    var203 = var201 ^ (arg188 ^ arg188 + var200)
    var204 = var201 | (var196 - var202 | var199)
    if var204 < var194:
        var205 = var203 + var197
    else:
        var205 = (var198 - var198) | var194 + var203
    var206 = (var190 | var200) & var201 ^ var200
    var207 = ((var192 ^ 882) & var203) - var202
    if var203 < var190:
        var208 = (var203 + var194) - var203
    else:
        var208 = var196 - var192 ^ var198 & var200
    var209 = var196 | arg187 + var191 + 157287173
    var210 = (var196 - 685181324) - var192 ^ var196
    var211 = var210 + var189
    var212 = -1299450055 & (var200 | var204) | var194
    var213 = var200 + var212 + var207 - var190
    result = ((var200 + (var198 & var207) & var189 - 1010394893 ^ var209 & var201 ^ var192 + var209 - var200) | arg187) + var197
    return result
def func40():
    func38()
    result = len(range(47))
    func39()
    return result
def func39():
    global len
    del len
def func38():
    global len
    len = lambda x : -9
def func37():
    func35()
    result = len([9 + 8 for i in ((-9 + 7) | 8 for i in range(3))])
    func36()
    return result
def func36():
    global len
    del len
def func35():
    global len
    len = lambda x : 5
def func33(arg181, arg182):
    result = arg181 ^ (arg182 - -1287695587)
    return result
def func32(arg178, arg179):
    var180 = (arg179 | 269) - ((arg179 - arg178) ^ arg179) - (arg179 & 537432620 | arg179 & ((arg178 - (arg178 - -1880517361 & ((-946 - (-674 & arg179 | arg178 | arg178 & arg179)) ^ arg179) + -2)) + arg179) ^ 538) & arg179
    result = arg178 ^ ((arg178 | 1335299840) + arg178)
    return result
def func19(arg103, arg104):
    var143 = var107(arg103, arg104)
    def func29(arg144, arg145):
        var146 = ((arg144 ^ arg104) | var143) + arg145
        var147 = var146 & var143
        var148 = (arg144 ^ arg144) | arg145 | arg104
        var149 = ((arg144 + var143) ^ arg145) - -422
        var150 = (var146 & var143 & -813) | var146
        var151 = var148 + var148 | var147 | arg104
        var152 = arg144 - (var148 - 1072465499 | var143)
        var153 = arg103 ^ arg144
        var154 = arg144 + (var143 + var149 & var148)
        if var152 < var147:
            var155 = -316904340 & var152
        else:
            var155 = 537 + var153
        var156 = -984 ^ var147
        var157 = var143 | (var151 | var143) - var149
        var158 = (var152 ^ var154) & 2063966504 & var147
        var159 = var152 - var143
        var160 = (var159 | -1400169393) | -310 + arg145
        var161 = -594846159 | var149 + var152 | var148
        var162 = var147 - (arg145 + var150 & var150)
        var163 = -639184918 - ((var148 + var147) | var148)
        var164 = var149 ^ var158 & -2005253159 | var149
        if arg145 < arg145:
            var165 = ((var150 & var163) - var157) ^ var159
        else:
            var165 = (arg145 | var164 & var146) & var163
        var166 = var159 + arg103
        var167 = 1283085780 & var148
        var168 = var158 & 1161714487
        var169 = var149 - var156 ^ 1372213388
        var170 = -107 + var148 | var152 & var160
        result = ((var150 ^ (var152 + var158) & var147 ^ ((var149 & var161 + var161 + var158) - (var159 | var166))) + var152) + var163
        return result
    var171 = func29(var143, arg104)
    var175 = func30(arg103, var143)
    var176 = var143 & arg104 | (((arg103 & (var175 | var143 + arg104) + arg103) & (-97494428 | var171)) & arg104 & (arg104 + var171 ^ 1916821762 + 751))
    var177 = var143 & arg103
    result = var143 - var176
    return result
def func22(arg108, arg109):
    var113 = func23(arg109, arg108)
    if arg109 < var113:
        var118 = class25()
    else:
        var118 = class27()
    for var119 in range(9):
        var118.func26(var119, arg108)
    var120 = -685 | (arg108 - -76)
    var121 = arg109 ^ arg109
    if var121 < var121:
        var122 = var121 + (arg108 | 890) + var120
    else:
        var122 = 1949984751 | ((var120 - var113) ^ -508)
    var123 = var113 - (737 ^ arg109) & var120
    var124 = var123 ^ 391 - -489
    var125 = var120 + var123
    var126 = var124 ^ arg109 | arg109 & var125
    var127 = (-56 - var125 - 386) ^ var120
    var128 = arg108 + (var123 & var121 - var123)
    var129 = var121 & var124
    var130 = (arg109 + var121) + var120
    var131 = arg108 & ((var127 - -865641719) ^ var130)
    var132 = (var128 + var113) + -287
    var133 = (var120 & (var126 & var129)) & var131
    var134 = ((var129 + var132) + var128) + var126
    var135 = var126 - var134
    var136 = var130 ^ (var123 - 422 - var127)
    var137 = var134 + (var126 + 493 ^ var133)
    var138 = var123 | var129
    var139 = var129 | var131 & var129 & var121
    var140 = var120 - (var113 & 224) + var120
    var141 = var123 - (arg109 ^ var123 + var137)
    var142 = var129 ^ (var134 - var124) + var136
    result = (var131 + var135) & var127
    return result
class class27(object):
    def func26(self, arg116, arg117):
        return 0
class class25(object):
    def func26(self, arg114, arg115):
        return 0
def func21():
    closure = [1]
    def func20(arg105, arg106):
        closure[0] += func22(arg105, arg106)
        return closure[0]
    func = func20
    return func
var107 = func21()
def func11(arg54, arg55):
    var59 = func12(arg54, arg55)
    var63 = func14(var59, arg54)
    var83 = var66(arg54, arg55)
    var84 = (arg55 & var83 ^ 404990832) | var83
    var85 = 157 & -583 & var84
    var86 = (1410750517 | var83 + 176) + arg55
    var87 = var85 | 22
    var88 = arg54 & var63 | var84 & var59
    var89 = var85 + 1625132838
    var90 = -882 ^ (arg54 ^ -146)
    var91 = ((arg55 - 1070579999) + var90) | var90
    var92 = var87 - -967
    var93 = (var59 | var63) - var59 & var84
    var94 = (var92 + var83) - var89
    var95 = var92 | var83
    var96 = (var89 + var94) & var89 & var83
    var97 = var91 + (var88 - var95)
    var98 = var94 | var90 ^ arg55 ^ var93
    var99 = var95 + (var90 & var93)
    var100 = var90 | var92
    var101 = (var92 ^ var87) | (var90 & var87)
    var102 = var85 & var100 + var59 - var91
    result = var101 | (var100 + arg54 | var94 ^ (((arg55 ^ var90 | var89) | var86) + var95) + var94) ^ -629
    return result
def func18(arg67, arg68):
    var69 = arg67 & (1270856533 | -1840455201) & -1403191936
    if arg67 < arg68:
        var70 = (-470 - 757 & arg67) ^ arg68
    else:
        var70 = -408390825 ^ ((1546332632 ^ arg67) - arg68)
    var71 = (-944 - arg67) | arg68 + arg67
    var72 = (var71 | 850) - var69 & arg67
    var73 = var71 + arg67 & arg67
    var74 = arg68 - (var73 + arg67)
    var75 = var71 - -619
    var76 = (var71 + arg68) - (arg68 | var71)
    var77 = (var71 | var76) & var76
    var78 = (arg68 + var77 - var73) + var71
    var79 = var74 | var72 ^ var73
    var80 = (var73 + -321) - arg68
    var81 = var75 - ((var72 & arg68) + var69)
    var82 = var77 | (arg68 - arg67)
    result = var75 ^ var74
    return result
def func17():
    closure = [-3]
    def func16(arg64, arg65):
        closure[0] += func18(arg64, arg65)
        return closure[0]
    func = func16
    return func
var66 = func17()
def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    def func3(arg8, arg9):
        var10 = func6()
        var11 = ((arg1 - arg9) ^ arg1) + var10
        var12 = 555 ^ var7
        var13 = -629 + var10 ^ var7 ^ arg9
        var14 = (arg8 + arg1 & var7) + arg2
        var15 = var7 - var12 & 1663489
        if arg8 < var10:
            var16 = arg8 + 1046267165 + var13 & arg2
        else:
            var16 = (445269523 | var12 + var11) - arg1
        var17 = (var12 & (var15 | var14)) ^ arg9
        var18 = (var12 ^ arg8) - var10 ^ arg2
        var19 = var10 | var18 | var14
        var20 = ((var7 - var12) + var11) + var13
        var21 = var11 - var7 + -118 - var11
        var22 = -999519568 ^ 893131052
        var23 = var19 - var18 - arg2 ^ arg8
        var24 = -960 + var20 & arg2 | 319
        var25 = var14 & var17
        var26 = var22 ^ (var11 | var12)
        var27 = var17 - ((arg8 - var24) | var13)
        var28 = var11 ^ (597 - -697) ^ var7
        var29 = var18 | var19 ^ var7 - var15
        result = (24 - var24) ^ var12 ^ var24 | arg1
        return result
    var30 = func3(arg2, var7)
    var35 = func7(var7, arg2)
    var41 = var38(var30, arg2)
    var42 = ((var7 ^ 1885147614) ^ var30) | arg2
    var43 = var42 - (-141 - arg1)
    var44 = var35 + (var41 ^ var35) ^ var30
    var45 = var44 | 740 | var41 | var43
    var46 = (arg1 & arg2) | var45 - var45
    var47 = ((var7 | arg2) & var41) - var41
    var48 = (var35 | var45 | var42) & var45
    var49 = (var35 ^ var7 ^ -1255527354) - var45
    var50 = var49 & arg1
    var51 = var50 + (arg1 - var30)
    var52 = var42 - var46 - 709 + var46
    var53 = var51 & var47
    result = var49 | var48 & arg2 | var44
    return result
def func10(arg39, arg40):
    result = (arg40 | 278 | -211) & arg40
    return result
def func9():
    closure = [1]
    def func8(arg36, arg37):
        closure[0] += func10(arg36, arg37)
        return closure[0]
    func = func8
    return func
var38 = func9()
def func7(arg31, arg32):
    var33 = 0
    for var34 in range(13):
        if var34 < var33:
            var33 += 8 ^ (arg31 ^ arg31)
        else:
            var33 += (var33 | var33) + arg31
    return var33
def func6():
    func4()
    result = len(range(46))
    func5()
    return result
def func5():
    global len
    del len
def func4():
    global len
    len = lambda x : -8
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(31):
        var5 += 7 + var5
    return var5
def func12(arg56, arg57):
    def func13(acc, rest):
        var58 = 8 | acc ^ 6
        if acc == 0:
            return var58
        else:
            result = func13(acc - 1, var58)
            return result
    result = func13(10, 0)
    return result
def func14(arg60, arg61):
    closure = [0]
    def func15(acc, rest):
        var62 = 5 - 5
        closure[0] += var62
        if acc == 0:
            return var62
        else:
            result = func15(acc - 1, var62)
            return result
    result = func15(10, 0)
    return result
def func23(arg110, arg111):
    def func24(acc, rest):
        var112 = -1 & -6
        if acc == 0:
            return var112
        else:
            result = func24(acc - 1, var112)
            return result
    result = func24(10, 0)
    return result
def func30(arg172, arg173):
    closure = [0]
    def func31(acc, rest):
        var174 = (rest + acc - ((1 + 8) + rest) | acc) ^ acc
        closure[0] += var174
        if acc == 0:
            return var174
        else:
            result = func31(acc - 1, var174)
            return result
    result = func31(10, 0)
    return result
if __name__ == "__main__":
    print('prog_size: 5')
    print('func_number: 11')
    print('arg_number: 54')
    for i in range(25000):
        x = 5
        x = func1(x, i)
        print(x, end='')
    print('prog_size: 3')
    print('func_number: 19')
    print('arg_number: 103')
    for i in range(25000):
        x = 5
        x = func11(x, i)
        print(x, end='')
    print('prog_size: 5')
    print('func_number: 32')
    print('arg_number: 178')
    for i in range(25000):
        x = 5
        x = func19(x, i)
        print(x, end='')
    print('prog_size: 0')
    print('func_number: 33')
    print('arg_number: 181')
    for i in range(25000):
        x = 5
        x = func32(x, i)
        print(x, end='')
    print('prog_size: 0')
    print('func_number: 34')
    print('arg_number: 183')
    for i in range(25000):
        x = 5
        x = func33(x, i)
        print(x, end='')
    print('prog_size: 5')
    print('func_number: 42')
    print('arg_number: 231')
    for i in range(25000):
        x = 5
        x = func34(x, i)
        print(x, end='')
    print('prog_size: 5')
    print('func_number: 50')
    print('arg_number: 279')
    for i in range(25000):
        x = 5
        x = func42(x, i)
        print(x, end='')
    print('prog_size: 5')
    print('func_number: 53')
    print('arg_number: 312')
    for i in range(25000):
        x = 5
        x = func50(x, i)
        print(x, end='')